#!/usr/bin/env node
import e from"fs";import o from"chalk";import r from"child_process";const n="./src/config/envVariable.ts",s=[{name:"version",fun:r=>{const n=r.version;if(!n||11!==n.length)return void console.log(o.red("请输入正确的版本号, 如 x.xx.xxxxxx"));let s=n.replace(/1\./,"20.");s=s.replace(/\./g,"");let l=e.readFileSync("./android/app/build.gradle",{encoding:"utf8"});l=l.replace(/versionCode \d+/,`versionCode ${s}`),l=l.replace(/versionName \".+\"/,`versionName "${n}"`),e.writeFileSync("./android/app/build.gradle",l),console.log(o.green("[success] Android版本号修改成功(versionName:"+n,"versionCode: "+s+")"))}},{name:"env",fun:r=>{const{env:s,outputPath:l=n,isBuild:t}=r,a=`./env/${s}`;if(!s)return void console.log(o.red("[error] 请输入环境名称, 如 development/production"));if(!e.existsSync(a))return void console.log(o.red(`[error] ${s}, 该输配置文件不存在`));if(!e.existsSync(l))return void console.log(o.red(`[error] ${l}, 该输出目录文件不存在`));const i=`${(e=>{const o=e.split("\n");let r="";return o.forEach(((e,n)=>{if(o[n]=e.replace(/\s/g,""),o[n].indexOf("=")>0){const[e,s]=o[n].split("=");r+=`export const ${e} = '${s}';\n`}})),r})(e.readFileSync(a,"utf-8"))}`;e.writeFileSync(l,i),t?(console.log(o.green(`[success] 已将环境设置为: ${s}, 开始打包Android...`)),console.log(o.yellow("[warning] 请注意iOS的环境,最好先打包Android再打包iOS!!!"))):console.log(o.green(`[success] 已将环境设置为: ${s}`))}},{name:"openFolder",fun:async()=>{if(!e.existsSync("./android/app/"))return void console.log(o.red("[error] 没有android文件夹"));let n=e.readFileSync("./android/app/build.gradle",{encoding:"utf8"});let s=n.match(/versionName \".+\"/);if(s){s=s[0].split(" ")[1].replace(/\"/g,"");const n="./android/app/build/outputs/apk/release/";e.rename(`${n}app-arm64-v8a-release.apk`,`${n}${s}.apk`,(r=>{r?console.log(o.red("[error] 重命名文件出错")):(async o=>{const r=(await e.promises.stat(o)).size;return Math.ceil(r/1024/1024)})(`${n}${s}.apk`).then((e=>{console.log(o.green(`[success] 包目录已打开, 版本号: ${s}, 文件大小: ${e}MB`))}))})),r.exec("open ./android/app/build/outputs/apk/release/")}else console.log(o.red("[error] 版本号读取出错,请核对"))}},{name:"createImageType",fun:r=>{const{path:n}=r,s=e.readdirSync(n);let l={},t={};const a=["png","jpg","jpeg"];if(s.forEach((e=>{const o=e.split(".");if(a.includes(o[1])){const r=o[0];t[r]="ImageSourcePropType",l[r]=`require(./${e})`}})),0===Object.keys(l).length)return void console.log(o.yellow("[warning] 没有找到图片，请核对图片所在路径"));l=JSON.stringify(l,null,"\t"),l=l.replace(/:\s"/g,": "),l=l.replace(/\(/g,'("'),l=l.replace(/\)"/g,'")'),l=l.replace(/"/g,"'"),t=JSON.stringify(t,null,"\t"),t=t.replace(/:\s"/g,": "),t=t.replace(/,/g,";"),t=t.replace(/"/g,"");const i=`import {ImageSourcePropType} from 'react-native';\nexport interface ImagesProps${t}\nconst Images: ImagesProps = ${l} \nexport default Images`;e.writeFileSync(`${n}/Images.ts`,i)}}],l=()=>{console.log("请输入以下方法:\nversion:         设置安卓版本号(e.g: apptool version:1.23.010101);\nenv:             设置当前环境参数(e.g: apptool env:production);\nopenFolder:      打开安卓打包文件夹,同时会把安装包命名为新的版本号;\ncreateImageType: 给图片添加ts类型, 可指定图片所在路径;(e.g: createIMageType path:./src/assets)")};!function(){const e=process.argv.splice(2),r={};if("-h"===e[0])return void l();e.forEach((e=>{const[o,n]=e.split(":");r[o]=n||!0}));let n=!1;for(let e=0;e<s.length;e++)if(r[s[e].name]){n=!0,s[e].fun(r);break}n||(console.log(o.red(`[error] 命令不正确 ${e}`)),l())}();
